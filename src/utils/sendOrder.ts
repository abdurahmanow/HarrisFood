import { Alert } from 'react-native';

/** –ü–æ–∑–∏—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã */
export type OrderCartItem = {
  title: string;
  qty: number;
  price: number;
  additions?: any[];
};

/** –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏/—Å–∞–º–æ–≤—ã–≤–æ–∑–∞ */
export type DeliveryTime =
  | { type: 'asap' }                                  // ¬´–ü–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏¬ª
  | { type: 'scheduled'; hhmm: string; dayOffset: 0 | 1 }; // –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤—Ä–µ–º—è + 0=–°–µ–≥–æ–¥–Ω—è / 1=–ó–∞–≤—Ç—Ä–∞

/** –ê–¥—Ä–µ—Å */
export type OrderAddress = {
  region?: string; // —Ç–µ–ø–µ—Ä—å —Å—é–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç ID —Ä–µ–≥–∏–æ–Ω–∞, –µ—Å–ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∞
  city?: string;
  street?: string;
  house?: string;
  /** –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å (–µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω ‚Äî —Å–æ–±–µ—Ä—ë–º –∏–∑ –ø–æ–ª–µ–π –≤—ã—à–µ) */
  full?: string;
  /** –î–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞ ‚Äî id —Ç–æ—á–∫–∏ */
  placeId?: string;
};

export type OrderData = {
  name: string;
  phone: string;
  payment: 'cash' | 'card';
  mode: 'delivery' | 'pickup';
  deliveryTime: DeliveryTime;
  comment?: string;
  address: OrderAddress;
  cart: OrderCartItem[];
  totals?: {
    subtotal: number;
    delivery: number;
    total: number;
  };
};

/* ===== helpers ===== */

function buildFullAddress(addr: OrderAddress): string | undefined {
  const regionCity = [addr.region, addr.city].filter(Boolean).join(', ');
  const streetHouse = [addr.street, addr.house].filter(Boolean).join(', ');
  const parts = [regionCity, streetHouse].filter(Boolean);
  return parts.length ? parts.join(', ') : undefined;
}

/** –ü—Ä–∏–Ω–∏–º–∞–µ–º 'HHMM' –∏–ª–∏ 'HH:MM' ‚Äî –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫ 'HHMM' */
function normalizeHHMM(v: string): string {
  const raw = (v || '').trim();
  if (!raw) {return '';}
  const cleaned = raw.includes(':') ? raw.replace(':', '') : raw;
  return cleaned.padStart(4, '0').slice(0, 4);
}

/* ===== main ===== */

export async function sendOrder(orderData: OrderData) {
  // –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º full + hhmm —É scheduled
  const normalized: OrderData = {
    ...orderData,
    address: {
      ...orderData.address,
      full: orderData.address.full ?? buildFullAddress(orderData.address),
    },
    deliveryTime:
      orderData.deliveryTime.type === 'scheduled'
        ? {
            type: 'scheduled',
            dayOffset: orderData.deliveryTime.dayOffset,
            hhmm: normalizeHHMM(orderData.deliveryTime.hhmm),
          }
        : { type: 'asap' },
  };

  const requestBody = JSON.stringify(normalized);

  try {
    const response = await fetch('https://cb591396a43b.ngrok-free.app/api/send-order/', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: requestBody,
    });

    const contentType = response.headers.get('content-type') || '';
    const isJson = contentType.toLowerCase().includes('application/json');
    const responseData = isJson ? await response.json() : await response.text();

    if (!response.ok) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞:', response.status, response.statusText);
      console.error('üìù –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', responseData);
      console.error('üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', requestBody);
      throw new Error(
        (isJson && (responseData as any)?.error) || `Server error: ${response.status}`
      );
    }

    //console.log('‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', responseData);
    //Alert.alert('–£—Å–ø–µ—Ö', '–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
    return true;
  } catch (error: any) {
    console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞:', error?.message || error);
    console.error('üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', requestBody);
    Alert.alert('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑');
    return false;
  }
}
